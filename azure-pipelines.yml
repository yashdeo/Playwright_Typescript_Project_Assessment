# .azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
  # 1. Get code from GitHub
  - checkout: self

  # 2. Use Node.js 20 (Playwright works well with it)
  - task: NodeTool@0
    displayName: "Use Node.js 20"
    inputs:
      versionSpec: '20.x'

  # 3. Install dependencies
  - script: |
      npm ci
    displayName: "Install npm packages"

  # 4. Install Playwright browsers (very important in CI)
  - script: |
      npx playwright install --with-deps
    displayName: "Install Playwright browsers"

  # 5. Run Playwright tests
  - script: |
      npx playwright test --reporter=junit,line
    displayName: "Run Playwright tests"
    continueOnError: true   # so we can still publish report even if tests fail

  # 6. Publish test results into Azure DevOps
  - task: PublishTestResults@2
    displayName: "Publish Playwright test results"
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/results.xml'
      testResultsFormat: 'JUnit'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      testRunTitle: 'Playwright Tests on Azure Pipelines'

  # 7. Publish HTML report (if you generate one later)
  # You can remove this if you don't need artifacts
  - task: PublishBuildArtifacts@1
    displayName: "Publish Test Artifact"
    inputs:
      PathtoPublish: 'playwright-report'
      ArtifactName: 'playwright-report'
      publishLocation: 'Container'
    condition: succeededOrFailed()
